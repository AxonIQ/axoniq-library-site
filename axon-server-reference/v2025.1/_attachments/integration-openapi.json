{
  "openapi": "3.0.1",
  "info": {
    "title": "Axon Server API",
    "description": "API for Axon Server http services.",
    "version": "2025.0.0-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:8024",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Integration Command Handlers",
      "description": "Operations to manage command handlers for integration endpoints"
    },
    {
      "name": "Integration Event Handlers",
      "description": "API endpoints for managing integration event handlers"
    },
    {
      "name": "Integration",
      "description": "API endpoints for integration with Axon Server via REST"
    },
    {
      "name": "Integration Query Handlers",
      "description": "Operations to manage query handlers for integration endpoints"
    },
    {
      "name": "Integration Endpoints",
      "description": "Operations for managing integration endpoints"
    }
  ],
  "paths": {
    "/v2/endpoints/{endpoint}/queryHandlers/{handler}": {
      "get": {
        "tags": [
          "Integration Query Handlers"
        ],
        "operationId": "getQueryHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHandler"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Integration Query Handlers"
        ],
        "summary": "Update a query handler",
        "description": "Update an existing query handler for a specific endpoint",
        "operationId": "updateQueryHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "description": "Handler UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Handler UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHandler"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202": {
            "description": "Update request accepted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Query handler not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integration Query Handlers"
        ],
        "summary": "Delete a query handler",
        "description": "Remove a query handler from a specific endpoint",
        "operationId": "deleteQueryHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "description": "Handler UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Handler UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Query handler successfully deleted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Query handler not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/endpoints/{endpoint}/eventHandlers/{handler}": {
      "get": {
        "tags": [
          "Integration Event Handlers"
        ],
        "operationId": "getEventHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHandler"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Integration Event Handlers"
        ],
        "summary": "Update an existing event handler",
        "description": "Updates the configuration of an existing event handler for an integration endpoint.",
        "operationId": "updateEventHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "UUID of the integration endpoint",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "description": "UUID of the event handler to update",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Event handler UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventHandler"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202": {
            "description": "Event handler update accepted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Event handler not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integration Event Handlers"
        ],
        "summary": "Delete an event handler",
        "description": "Removes an event handler from an integration endpoint.",
        "operationId": "deleteEventHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "UUID of the integration endpoint",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "description": "UUID of the event handler to delete",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Event handler UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Event handler successfully deleted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Event handler not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/endpoints/{endpoint}/commandHandlers/{handler}": {
      "get": {
        "tags": [
          "Integration Command Handlers"
        ],
        "operationId": "getCommandHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandHandler"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Integration Command Handlers"
        ],
        "summary": "Update a command handler",
        "description": "Update an existing command handler for a specific endpoint",
        "operationId": "updateCommandHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "description": "Handler UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Handler UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandHandler"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202": {
            "description": "Update request accepted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Command handler or endpoint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integration Command Handlers"
        ],
        "summary": "Delete a command handler",
        "description": "Remove a command handler from a specific endpoint",
        "operationId": "deleteCommandHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "handler",
            "in": "path",
            "description": "Handler UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Handler UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202": {
            "description": "Deletion request accepted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Command handler or endpoint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/endpoints/{endpointId}": {
      "get": {
        "tags": [
          "Integration Endpoints"
        ],
        "operationId": "getEndpoint",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endpoint"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Integration Endpoints"
        ],
        "summary": "Update an endpoint",
        "description": "Updates an existing integration endpoint with the provided configuration",
        "operationId": "updateEndpoint",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Endpoint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Update request accepted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Endpoint not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integration Endpoints"
        ],
        "summary": "Delete an endpoint",
        "description": "Removes an integration endpoint and all its associated handlers",
        "operationId": "deleteEndpoint",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid endpoint ID format",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Endpoint successfully deleted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Endpoint not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Integration Endpoints"
        ],
        "summary": "Change endpoint active state",
        "description": "Activates or deactivates an integration endpoint. When deactivated, the endpoint will not process messages.",
        "operationId": "patchEndpoint",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Activation state: true to activate, false to deactivate",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Activation state: true to activate, false to deactivate"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid endpoint ID format",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "State change request accepted",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Endpoint not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/snapshots": {
      "post": {
        "tags": [
          "Integration"
        ],
        "operationId": "publishSnapshot",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Snapshot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v2/snapshots/{aggregateId}": {
      "post": {
        "tags": [
          "Integration"
        ],
        "operationId": "publishSnapshotRaw",
        "parameters": [
          {
            "name": "aggregateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-MessageId",
            "in": "header",
            "description": "Message identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadRevision",
            "in": "header",
            "description": "Payload revision",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadType",
            "in": "header",
            "description": "Payload type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-AggregateType",
            "in": "header",
            "description": "Aggregate type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-SequenceNumber",
            "in": "header",
            "description": "Sequence number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "AxonIQ-DateTime",
            "in": "header",
            "description": "Date and time of the event",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "arg7": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/queries": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Dispatch a query with JSON payload",
        "description": "Sends a query to Axon Server for processing with a JSON payload",
        "operationId": "dispatchQueryRaw",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Query successfully processed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "500": {
            "description": "Query processing failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/queries/{name}": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Dispatch a query with binary payload",
        "description": "Sends a query to Axon Server for processing with a binary payload",
        "operationId": "dispatchQuery",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Query name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Query name"
            }
          },
          {
            "name": "AxonIQ-MessageId",
            "in": "header",
            "description": "Message identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadType",
            "in": "header",
            "description": "Payload type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadRevision",
            "in": "header",
            "description": "Payload revision",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-ResponseType",
            "in": "header",
            "description": "Query response type",
            "required": false,
            "schema": {
              "type": "string",
              "default": "java.lang.Object"
            }
          },
          {
            "name": "AxonIQ-ResponseTypeEncoding",
            "in": "header",
            "description": "Query response type encoding",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-ResponseCardinality",
            "in": "header",
            "description": "Query response type",
            "required": false,
            "schema": {
              "type": "string",
              "default": "single"
            }
          },
          {
            "name": "AxonIQ-NumberOfResponders",
            "in": "header",
            "description": "Query response type",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "arg8": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Query successfully processed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Query processing failed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/events": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Publish an event with JSON payload",
        "description": "Publishes an event to Axon Server with a JSON payload",
        "operationId": "publishEvents_1",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.axoniq.event.list+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid event format",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Event successfully published",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Event publishing failed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/events/{name}": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Publish an event with binary payload",
        "description": "Publishes an event to Axon Server with a binary payload",
        "operationId": "publishEventRaw",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Event name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Event name"
            }
          },
          {
            "name": "AxonIQ-MessageId",
            "in": "header",
            "description": "Message identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadRevision",
            "in": "header",
            "description": "Payload revision",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-AggregateId",
            "in": "header",
            "description": "Aggregate identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-AggregateType",
            "in": "header",
            "description": "Aggregate type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-SequenceNumber",
            "in": "header",
            "description": "Sequence number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "AxonIQ-DateTime",
            "in": "header",
            "description": "Date and time of the event",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "arg7": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid event format",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Event successfully published",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Event publishing failed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/endpoints": {
      "get": {
        "tags": [
          "Integration Endpoints"
        ],
        "summary": "List all endpoints",
        "description": "Retrieves all integration endpoints with their handlers and connection status",
        "operationId": "endpoints",
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "List of endpoints retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointOverview"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integration Endpoints"
        ],
        "summary": "Register a new endpoint",
        "description": "Creates a new integration endpoint with the provided configuration",
        "operationId": "registerEndpoint",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Endpoint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Endpoint successfully created",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/endpoints/{endpoint}/queryHandlers": {
      "post": {
        "tags": [
          "Integration Query Handlers"
        ],
        "summary": "Register a query handler",
        "description": "Register a new query handler for a specific endpoint to handle incoming query requests",
        "operationId": "registerQueryHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHandler"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Query handler successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Id"
                }
              }
            }
          },
          "404": {
            "description": "Endpoint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/endpoints/{endpoint}/eventHandlers": {
      "post": {
        "tags": [
          "Integration Event Handlers"
        ],
        "summary": "Register a new event handler",
        "description": "Registers a new event handler for an integration endpoint. The handler will process events according to the specified sequencing policy.",
        "operationId": "registerEventHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "UUID of the integration endpoint",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventHandler"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Event handler successfully registered",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Id"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/endpoints/{endpoint}/commandHandlers": {
      "post": {
        "tags": [
          "Integration Command Handlers"
        ],
        "summary": "Register a command handler",
        "description": "Register a new command handler for a specific endpoint. Command handlers process commands sent to the endpoint.",
        "operationId": "registerCommandHandler",
        "parameters": [
          {
            "name": "endpoint",
            "in": "path",
            "description": "Endpoint UUID",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Endpoint UUID",
              "format": "uuid"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandHandler"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Command handler successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Id"
                }
              }
            }
          },
          "404": {
            "description": "Endpoint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/commands": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Dispatch a command with JSON payload",
        "description": "Sends a command to Axon Server for processing with a JSON payload",
        "operationId": "dispatchCommand",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Command"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid command format",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Command processing failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Command successfully processed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/commands/{name}": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Dispatch a command with binary payload",
        "description": "Sends a command to Axon Server for processing with a binary payload",
        "operationId": "dispatchCommandRaw",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Command name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Command name"
            }
          },
          {
            "name": "AxonIQ-MessageId",
            "in": "header",
            "description": "Message identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadType",
            "in": "header",
            "description": "Payload type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadRevision",
            "in": "header",
            "description": "Payload revision",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-Priority",
            "in": "header",
            "description": "Priority level",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AxonIQ-RoutingKey",
            "in": "header",
            "description": "Routing key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "arg6": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid command format",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Command successfully processed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Command processing failed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v2/aggregates/{aggregateId}/snapshots": {
      "get": {
        "tags": [
          "Integration"
        ],
        "operationId": "readSnapshots",
        "parameters": [
          {
            "name": "aggregateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minSequence",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Snapshot"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/aggregates/{aggregateId}/events": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Read aggregate events",
        "description": "Retrieves events for a specific aggregate from Axon Server",
        "operationId": "readAggregateEvents",
        "parameters": [
          {
            "name": "aggregateId",
            "in": "path",
            "description": "Aggregate identifier",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Aggregate identifier"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Context name",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context name",
              "example": "default"
            },
            "example": "default"
          },
          {
            "name": "minSequence",
            "in": "query",
            "description": "Minimum sequence number (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Minimum sequence number (inclusive)",
              "default": "0"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Events successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/aggregates/{aggregateId}/eventsPaged": {
      "get": {
        "tags": [
          "Integration"
        ],
        "operationId": "readAggregateEventsPaged",
        "parameters": [
          {
            "name": "aggregateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageOffset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregatePage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "QueryHandler": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "queryUrl": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "EventHandler": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "batchSize": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "type": "string"
          },
          "sequencingPolicy": {
            "type": "string"
          },
          "sequencingPolicyParameters": {
            "type": "string"
          },
          "segments": {
            "type": "integer",
            "format": "int32"
          },
          "startPosition": {
            "type": "string"
          },
          "eventUrl": {
            "type": "string"
          }
        }
      },
      "CommandHandler": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "loadFactor": {
            "type": "integer",
            "format": "int32"
          },
          "commandUrl": {
            "type": "string"
          }
        }
      },
      "Endpoint": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "commandUrl": {
            "type": "string"
          },
          "queryUrl": {
            "type": "string"
          },
          "eventUrl": {
            "type": "string"
          },
          "healthUrl": {
            "type": "string"
          },
          "wrappingType": {
            "type": "string"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "Snapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "aggregateId": {
            "type": "string"
          },
          "aggregateType": {
            "type": "string"
          },
          "sequenceNumber": {
            "type": "integer",
            "format": "int64"
          },
          "payloadRevision": {
            "type": "string"
          },
          "payloadType": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Query": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "numberOfResponses": {
            "type": "integer",
            "format": "int32"
          },
          "responseCardinality": {
            "type": "string",
            "enum": [
              "SINGLE",
              "MULTIPLE"
            ]
          },
          "responseType": {
            "type": "string"
          },
          "responseTypeEncoding": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string"
          },
          "payloadRevision": {
            "type": "string"
          }
        },
        "description": "Query to be dispatched"
      },
      "QueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string"
          },
          "payloadRevision": {
            "type": "string"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "aggregateId": {
            "type": "string"
          },
          "aggregateType": {
            "type": "string"
          },
          "sequenceNumber": {
            "type": "integer",
            "format": "int64"
          },
          "payloadRevision": {
            "type": "string"
          },
          "payloadType": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Id": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Command": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "routingKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string"
          },
          "payloadRevision": {
            "type": "string"
          }
        },
        "description": "Command to be dispatched"
      },
      "CommandResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string"
          },
          "payloadRevision": {
            "type": "string"
          }
        }
      },
      "CommandHandlerOverview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "loadFactor": {
            "type": "integer",
            "format": "int32"
          },
          "commandUrl": {
            "type": "string"
          }
        }
      },
      "EndpointOverview": {
        "type": "object",
        "properties": {
          "context": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "commandUrl": {
            "type": "string"
          },
          "queryUrl": {
            "type": "string"
          },
          "eventUrl": {
            "type": "string"
          },
          "healthUrl": {
            "type": "string"
          },
          "wrappingType": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "commandHandlers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandHandlerOverview"
            }
          },
          "eventHandlers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventHandlerOverview"
            }
          },
          "queryHandlers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryHandlerOverview"
            }
          },
          "connections": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EventHandlerOverview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "batchSize": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "type": "string"
          },
          "sequencingPolicy": {
            "type": "string"
          },
          "sequencingPolicyParameters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "eventUrl": {
            "type": "string"
          }
        }
      },
      "QueryHandlerOverview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "queryUrl": {
            "type": "string"
          }
        }
      },
      "AggregatePage": {
        "type": "object",
        "properties": {
          "numberOfPage": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "isLast": {
            "type": "boolean"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      }
    }
  }
}