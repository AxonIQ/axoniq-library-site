{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:7000",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Request handler",
      "description": "Handles requests from Axon Server. Requests can be commands, queries, and events. The requests may arrive wrapped in a JSON object or raw inside the HTTP body."
    }
  ],
  "paths": {
    "/queriesWrapped": {
      "post": {
        "tags": [
          "Request handler"
        ],
        "description": "Handle query, request body is a JSON object",
        "operationId": "handleWrappedQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The query results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid message",
            "content": {
              "text/plain": {}
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    },
    "/queries/{name}": {
      "post": {
        "tags": [
          "Request handler"
        ],
        "description": "Handle query, request body contains the payload",
        "operationId": "queryRaw",
        "parameters": [
          {
            "name": "AxonIQ-QueryName",
            "in": "header",
            "description": "Query name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-MessageId",
            "in": "header",
            "description": "Message identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadType",
            "in": "header",
            "description": "Type of the payload. To integrate with Axon Framework based application use fully-qualified class name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadRevision",
            "in": "header",
            "description": "Payload revision",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-MetaData",
            "in": "header",
            "description": "Meta data of the event, JSON serialized string of key/value pairs",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The query successfully executed, the result is returned in the body",
            "headers": {
              "AxonIQ-PayloadRevision": {
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "AxonIQ-MessageId": {
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "AxonIQ-PayloadType": {
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid message",
            "content": {
              "text/plain": {}
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    },
    "/eventsWrapped": {
      "post": {
        "tags": [
          "Request handler"
        ],
        "description": "Handles multiple event, request body is a list of event messages",
        "operationId": "handleWrappedEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventMessage"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Events successfully processed"
          },
          "400": {
            "description": "Invalid message",
            "content": {
              "text/plain": {}
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    },
    "/events/{name}": {
      "post": {
        "tags": [
          "Request handler"
        ],
        "description": "Handle event, request body is the event payload",
        "operationId": "eventsRaw",
        "parameters": [
          {
            "name": "AxonIQ-MessageId",
            "in": "header",
            "description": "Message identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadType",
            "in": "header",
            "description": "Type of the payload. To integrate with Axon Framework based application use fully-qualified class name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadRevision",
            "in": "header",
            "description": "Payload revision",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-AggregateId",
            "in": "header",
            "description": "Aggregate identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-AggregateType",
            "in": "header",
            "description": "Aggregate type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-SequenceNumber",
            "in": "header",
            "description": "Sequence number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "AxonIQ-MetaData",
            "in": "header",
            "description": "Meta data of the event, JSON serialized string of key/value pairs",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-DateTime",
            "in": "header",
            "description": "Date and time of the event",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "AxonIQ-Index",
            "in": "header",
            "description": "Global index of the event",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Event successfully processed",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "Invalid message",
            "content": {
              "text/plain": {}
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    },
    "/commandsWrapped": {
      "post": {
        "tags": [
          "Request handler"
        ],
        "description": "Handle command, request body is a JSON object",
        "operationId": "handleWrappedCommand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Command successfully executed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid message",
            "content": {
              "text/plain": {}
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    },
    "/commands/{name}": {
      "post": {
        "tags": [
          "Request handler"
        ],
        "description": "Handle command, request body contains the payload",
        "operationId": "commandRaw",
        "parameters": [
          {
            "name": "AxonIQ-MessageId",
            "in": "header",
            "description": "Message identifier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-CommandName",
            "in": "header",
            "description": "Command name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadType",
            "in": "header",
            "description": "Type of the payload. To integrate with Axon Framework based application use fully-qualified class name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-PayloadRevision",
            "in": "header",
            "description": "Payload revision",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-MetaData",
            "in": "header",
            "description": "Meta data of the event, JSON serialized string of key/value pairs",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AxonIQ-Priority",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The command is successfully executed",
            "headers": {
              "AxonIQ-PayloadRevision": {
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "AxonIQ-MessageId": {
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              },
              "AxonIQ-PayloadType": {
                "style": "simple",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid message",
            "content": {
              "text/plain": {}
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonNode": {
        "type": "object",
        "description": "Payload of the query. Json payloads are embedded in the message, text payloads are added as strings, binary payloads are Base64 encoded strings",
        "example": "{some=payload}"
      },
      "QueryMessage": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Query name",
            "example": "local.application.client.Query"
          },
          "id": {
            "type": "string",
            "description": "Unique message identifier",
            "example": "59eed54e-ccb4-48ac-af01-144f0ca68f67"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value map with message meta data",
              "example": "{some key=some value, another key=another value}"
            },
            "description": "Key-value map with message meta data",
            "example": "{some key=some value, another key=another value}"
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string",
            "description": "Type of the payload",
            "example": "local.application.client.Payload"
          },
          "payloadRevision": {
            "type": "string",
            "description": "Revision of the payload.",
            "example": "1.0"
          }
        },
        "description": "Query message"
      },
      "QueryResponseMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique message identifier",
            "example": "59eed54e-ccb4-48ac-af01-144f0ca68f67"
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string",
            "description": "Type of the payload. To integrate with Axon Framework based application use fully-qualified class name",
            "example": "local.application.client.Payload"
          },
          "payloadRevision": {
            "type": "string",
            "description": "Revision of the payload.",
            "example": "1.0"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value map with message meta data",
              "example": "{some key=some value, another key=another value}"
            },
            "description": "Key-value map with message meta data",
            "example": "{some key=some value, another key=another value}"
          }
        }
      },
      "QueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "EventMessage": {
        "required": [
          "payloadType"
        ],
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "Global sequence number of the event",
            "format": "int64",
            "example": 28733589
          },
          "id": {
            "type": "string",
            "description": "Unique message identifier",
            "example": "59eed54e-ccb4-48ac-af01-144f0ca68f67"
          },
          "aggregateId": {
            "type": "string",
            "description": "Unique aggregate identifier",
            "example": "901aa5ce-b281-4788-97f2-2be7f236dde6"
          },
          "aggregateType": {
            "type": "string",
            "description": "Aggregate type",
            "example": "Aggregate"
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Sequence number",
            "format": "int64",
            "example": 0
          },
          "dateTime": {
            "type": "string",
            "description": "Date and time",
            "format": "date-time",
            "example": "2022-09-22T21:37:00Z"
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string",
            "description": "Payload type",
            "example": "local.application.client.Event"
          },
          "payloadRevision": {
            "type": "string",
            "description": "Revision of the payload.",
            "example": "1.0"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value map with message meta data",
              "example": "{some key=some value, another key=another value}"
            },
            "description": "Key-value map with message meta data",
            "example": "{some key=some value, another key=another value}"
          }
        },
        "description": "Event message"
      },
      "CommandMessage": {
        "required": [
          "name",
          "payloadType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Command name",
            "example": "local.application.client.Command"
          },
          "routingKey": {
            "type": "string",
            "description": "Key used for consistent command routing among command handling instances.",
            "example": "fa797f82-24e8-459f-9d30-b004af411c13"
          },
          "priority": {
            "type": "integer",
            "description": "Relative priority of the command",
            "format": "int64",
            "example": 100
          },
          "id": {
            "type": "string",
            "description": "Unique message identifier",
            "example": "59eed54e-ccb4-48ac-af01-144f0ca68f67"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value map with message meta data",
              "example": "{some key=some value, another key=another value}"
            },
            "description": "Key-value map with message meta data",
            "example": "{some key=some value, another key=another value}"
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string",
            "description": "Payload type",
            "example": "local.application.client.Event"
          },
          "payloadRevision": {
            "type": "string",
            "description": "Revision of the payload.",
            "example": "1.0"
          }
        },
        "description": "Command message"
      },
      "CommandResponseMessage": {
        "required": [
          "payloadType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique message identifier",
            "example": "59eed54e-ccb4-48ac-af01-144f0ca68f67"
          },
          "payload": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "payloadType": {
            "type": "string",
            "description": "To integrate with Axon Framework based application use fully-qualified class name",
            "example": "local.application.client.CommandResponse"
          },
          "payloadRevision": {
            "type": "string",
            "description": "Revision of the payload.",
            "example": "1.0"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value map with message meta data",
              "example": "{some key=some value, another key=another value}"
            },
            "description": "Key-value map with message meta data",
            "example": "{some key=some value, another key=another value}"
          }
        }
      }
    }
  }
}